#!/bin/bash

### getThermo - A script to execute getThermo Fortran program
### A program to calculate Partition Functions and Gibbs Free Energy from selected Normal Modes from GAMESS
### Grupo de Espectroscopia TeÃ³rica e Modelagem Molecular - GETMM (IQ/UFRJ)

### Location of getThermo (/folder/getThermo/bin)
getDIR="$HOME/Documents/GitHub/getThermo/bin"

if [ -f $getDIR/getThermo.x ]; then
	echo -e "\033[01;32mgetThermo in execution...\033[00m"  	    
else
	echo -e "\033[01;31mThere's no valid binaries directory. Configure it in this script. End of getThermo execution.\033[00m"  	
	exit 1
fi

### Definition of Input File
if [ -n "$1" ]; then 
	if [ -f "$1" ]; then
        INPUT=$1    
    else
    	echo -e "\033[01;31mThere's no valid input file. End of getThermo execution.\033[00m"  	
    	exit 1        
    fi
else
	echo -e "\033[01;31mThere's no valid input file. End of getThermo execution.\033[00m"  	
	exit 1
fi

### Required Keywords
## Definition of output filename or folder which contains (OUTPUT)
if grep -q "Output" $INPUT; then
	OUTPUT=`grep "Output" $INPUT|tail -1|cut -d "=" -f 2|cut -d " " -f 1`
else
	echo -e "\033[01;31mThere's no valid output file selected. End of getThermo execution.\033[00m"  	
	exit 1
fi

## Checking work type as single calculation (File) or multiple calculations (Folder)
if ls -la|awk '{print $9}'|grep -q "$OUTPUT"; then	
	if ls -la|grep ^d|awk '{print $9}'|grep -qFx "$OUTPUT"; then
        WORKTYPE=FOLDER
		JOB=(`grep -l -e "RUNTYP=HESSIAN" -e "Frequencies" $OUTPUT/*`)
	fi		
	if ls -la|grep ^-|awk '{print $9}'|grep -qFx "$OUTPUT"; then
        WORKTYPE=FILE
		JOB=`grep -l -e "RUNTYP=HESSIAN" -e "Frequencies" $OUTPUT`
	fi
else
	echo -e "\033[01;31mThere's no valid output file selected. End of getThermo execution.\033[00m"  	
	exit 1
fi

## Checking if the output file is from GAMESS or Gaussian09 calculation
if grep -q "EXECUTION OF GAMESS TERMINATED NORMALLY" "${JOB[0]}"; then
    if grep -q "RUNTYP=HESSIAN" "${JOB[0]}"; then
        JOBTYPE=GAMESS
    else
    	echo -e "\033[01;31mThe GAMESS jobs aren't from HESSIAN type. End of getThermo execution.\033[00m"
        exit 1
    fi
else
    if grep -q "Normal termination of Gaussian 09" "${JOB[0]}"; then
        if grep -q "Frequencies" "${JOB[0]}"; then
            JOBTYPE=GAUSSIAN
        fi
    else
        echo -e "\033[01;31mThe Gaussian09 jobs aren't from Freq type. End of getThermo execution.\033[00m"
        exit 1
    fi
fi

## Definition of Number of Vibrational Modes selected to thermodynamics proprieties calculations (NVibMode)
if grep -q "NVibMode" $INPUT; then
	NVibMode=`grep "NVibMode" $INPUT|tail -1|cut -d "=" -f 2|cut -d " " -f 1`
else
	echo -e "\033[01;31mThere's no valid number of vibrational modes selected. End of getThermo execution.\033[00m"  	
	exit 1
fi

### Optional Keywords
## Array containing the sequence of normal modes (IMode)
if grep "IMode" $INPUT; then
	IMode=(`grep "IMode" $INPUT|tail -1|cut -d "=" -f 2|cut -d "#" -f 1`)
else
    case "$JOBTYPE" in
    GAMESS)
        i=0
        while [ $i -lt $NVibMode ]; do
        	IMode[$i]=$((i+6+1))
        	i=$((i+1))
        done
        ;;
    GAUSSIAN)
        i=0
        while [ $i -lt $NVibMode ]; do
        	IMode[$i]=$((i+1))
        	i=$((i+1))
        done
        ;;
    esac
fi

## Array containing selected temperatures in Kelvin (Temperature)
if grep -q "Temperature" $INPUT; then
	Temperature=(`grep "Temperature" $INPUT|tail -1|cut -d "=" -f 2|cut -d "#" -f 1`)
else
	Temperature=298.15
fi

### Individual GAMESS Output Informations
NJob=0
while [ $NJob -lt ${#JOB[*]} ]; do

## Total Electronic Energy of System in Hartree units (EEnergy)
if grep "EEnergy" $INPUT; then
	EEnergy=`grep "EEnergy" $INPUT|tail -1|cut -d "=" -f 2|cut -d " " -f 1`
else
    case "$JOBTYPE" in
    GAMESS)
        EEnergy=`grep "TOTAL ENERGY =" ${JOB[$NJob]}|awk '{print $4}'`
        ;;
    GAUSSIAN)
        EEnergy=`grep "SCF Done" ${JOB[$NJob]}|tail -1|awk '{print $5}'`
        ;;    
    esac
fi

## Obtaning last informations from output file
case "$JOBTYPE" in
GAMESS)
    NAtoms=`grep "TOTAL NUMBER OF ATOMS" ${JOB[$NJob]}|awk '{print $6}'`
    TMode=`echo "$NAtoms*3"|bc -l`
    QElec=`grep "ELEC\." ${JOB[$NJob]}|head -1|awk '{print $2}'`

    AWLine=`grep -n "ATOMIC WEIGHTS" ${JOB[$NJob]}|cut -d ':' -f 1|head -1`
    AMass=(`sed -n "$((AWLine+2)), $((AWLine+NAtoms+1)) p" ${JOB[$NJob]}|awk '{print $3}'`)

    InertiaLine=`grep -n "THE MOMENTS OF INERTIA ARE" ${JOB[$NJob]}|cut -d ':' -f 1|head -1`
    Inertia=(`sed -n "$((InertiaLine+1)) p" ${JOB[$NJob]}`)

    TModeList=(`grep "FREQUENCY:" ${JOB[$NJob]}|cut -d ':' -f 2|sed 's/I/ /g'`)
    ;;
GAUSSIAN)
    NAtoms=`grep "NAtoms" ${JOB[$NJob]}|tail -1|awk '{print $2}'`
    TMode=`echo "($NAtoms*3)-6"|bc -l`
    QElec=`grep "Electronic" ${JOB[$NJob]}|tail -1|awk '{print $2}'|sed -e 's/D/E/'`

    AMass=(`grep "and mass" ${JOB[$NJob]}|awk '{print $9}'`)

    InertiaLine=`grep -n "moments of inertia" ${JOB[$NJob]}|cut -d ':' -f 1|head -1`
    Inertia=(`sed -n "$((InertiaLine+2)) p" ${JOB[$NJob]}|cut -d '-' -f 3`)
    if [ ${#Inertia[*]} == 1 ]; then
        Inertia=("${Inertia:0:10} ${Inertia:10:10} ${Inertia:20:10}")
    fi

    TModeList=(`grep "Frequencies " ${JOB[$NJob]}|cut -d '-' -f 3`)
    ;;
esac

### Creating the getThermo binary input file
Title=`echo "${JOB[$NJob]}"|cut -d "." -f 1`
echo -e "$NAtoms $TMode $NVibMode\n${IMode[*]}\n$EEnergy $QElec\n${AMass[*]}\n${Inertia[*]}\n${TModeList[*]}\n${#Temperature[*]}\n${Temperature[*]}" > $Title.getThermo.inp

### Executing thermodynamics proprieties calculations with getThermo binary
$getDIR/getThermo.x $Title $Title.getThermo.inp > $Title.getThermo.out

echo -e "\n # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #" >> $Title.getThermo.out
date '+Date %y-%m-%d - Time %H-%M-%S' >> $Title.getThermo.out
rm -f $Title.getThermo.inp

### Creating Table for Multiple Results
if [ $WORKTYPE == FOLDER ]; then
    Table=$OUTPUT
else
    Table=$Title
fi

if [ $NJob == 0 ]; then
	echo -e "Job\tT (K)\tVibrationalG (kcal/mol)\tRotationalG (kcal/mol)\tTranslationalG (kcal/mol)\tThermalCorrection (kcal/mol)\tTotalG (kcal/mol)" > $Table.getThermo.tsv
fi
    
NTemp=0
while [ $NTemp -lt ${#Temperature[*]} ]; do
    GRot=`awk '/Rotational\ Gibbs\ Free\ Energy\:/{print $5}' $Title.getThermo.out|sed -n "$((NTemp+1)) p"`
    GTrans=`awk '/Translational\ Gibbs\ Free\ Energy\:/{print $5}' $Title.getThermo.out|sed -n "$((NTemp+1)) p"`
    GVib=`awk '/Vibrational\ Gibbs\ Free\ Energy\:/{print $5}' $Title.getThermo.out|sed -n "$((NTemp+1)) p"`
    GCorr=`awk '/Total\ Thermal\ Correction\:/{print $4}' $Title.getThermo.out|sed -n "$((NTemp+1)) p"`
    TotalG=`awk '/Total\ Gibbs\ Free\ Energy\:/{print $5}' $Title.getThermo.out|sed -n "$((NTemp+1)) p"`
    echo -e "$Title\t${Temperature[NTemp]}\t$GRot\t$GTrans\t$GVib\t$GCorr\t$TotalG" >> $Table.getThermo.tsv
    NTemp=$((NTemp+1))
done

NJob=$((NJob+1))
done

echo -e "\033[01;32mgetThermo was sucesfully executed.\033[00m"
